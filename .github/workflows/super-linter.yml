---
name: Linting

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
jobs:
  run-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: "main"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILTER_REGEX_EXCLUDE: .stylelintrc.json|public/styles/SVGs/DefaultStatsStyles.css|Pages/faq.html
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ "3.12" ]
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5.0.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=${PYTHONPATH}:." >> "$GITHUB_ENV"
        shell: bash
      - name: Cache Python dependencies
        uses: actions/cache@v4.0.0
        with:
          path: |
            ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pylint
        shell: bash
      - name: Analysing the code with pylint
        run: |
          for file in $(git ls-files '*.py'); do
            pylint "$file"
          done
        shell: bash
  eslint:
    name: Run eslint scanning
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 20

      - name: Checkout code
        uses: actions/checkout@v4.1.1

      - name: Install ESLint
        run: |
          npm install eslint@8.10.0
          npm install @microsoft/eslint-formatter-sarif@2.1.7

      - name: Run ESLint
        run: |
          npx eslint . \
          --config .eslintrc.yml \
          --ext .js,.jsx,.ts,.tsx \
          --format @microsoft/eslint-formatter-sarif \
          --output-file eslint-results.sarif
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: eslint-results.sarif
          wait-for-processing: true